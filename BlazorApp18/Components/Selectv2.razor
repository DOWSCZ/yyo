@using BlazorApp18.Classes
@using BlazorApp18.Zadání
@typeparam TEntity where TEntity : BlazorApp18.Zadání.ISelecatble


<div class="fixed left-0 right-0 bottom-0 opacity-100 top-0 z-onTop @(DropDownActive ? "" : "hidden")" @onclick="SelectClicked">

    <div class="relative">
        @if (DropDownActive)
        {
            <div class="absolute h-screen w-screen flex flex-col   bg-black/50 items-center justify-center ">

                <div class="bg-white flex flex-col gap-1 items-center justify-center p-2  rounded-2xl overscroll-auto">
                    @foreach (ISelecatble item in Items)
                    {
                        <div class="@ItemStyle  bg-white  cursor-pointer flex gap-4 w-full hover:bg-blue-500 rounded-2xl duration-500 justify-between items-center" @onclick="() => ItemSelected(item)">
                            <img src="@item.ImageUrl" alt="car" class="@ImgSizeTailwind"/>
                            <div class="">@item.Text</div>
                            <div class="w-1"></div>
                        </div>
                    }
                </div>

            </div>
        }
    </div>
</div>


<div @onchange="SelectChange" @onclick="SelectClicked" class="opacity-100  componentInteractionAnimation componentBorderStyle cursor-pointer group">
    <div class="@ItemStyle  flex justify-between items-center gap-4 w-full">

        <img src="@SelectedItem?.ImageUrl" class="@ImgSizeTailwind"/>

        <div class="text-white font-bold">@SelectedItem?.Text</div>

        <div class="cursor-pointer  flex flex-col  items-center justify-center gap-1 ">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-4 h-4  duration-200 group-hover:text-yellow-400/50 translate-y-1 text-componentColorDarkest">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 15.75l7.5-7.5 7.5 7.5"/>
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-4 h-4  duration-200 group-hover:text-yellow-400/50   -translate-y-1 text-componentColorDarkest">
                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
            </svg>
        </div>

    </div>
</div>

<div class="absolute py-2 px-4"></div>

@code {

    [Parameter]
    public string ImgSizeTailwind { get; set; }

    private bool DropDownActive { get; set; } = false;

    [Parameter]
    public string ItemStyle { get; set; } = "py-2 px-4";

    [Parameter]
    public ISelecatble SelectedItem { get; set; } = null!;

    [Parameter]
    public IEnumerable<ISelecatble> Items { get; set; } = Array.Empty<ISelecatble>();

    [Parameter]
    public EventCallback<ISelecatble> OnChanged { get; set; }

    private async Task SelectChange(ChangeEventArgs arg)
    {
        await OnChanged.InvokeAsync((ISelecatble) arg.Value!);
    }

    private void SelectClicked()
    {
        DropDownActive = !DropDownActive;
    }

    private void ItemSelected(ISelecatble item)
    {
        SelectedItem = item;

        StateHasChanged();
        OnChanged.InvokeAsync(SelectedItem);
    }

    protected override Task OnInitializedAsync()
    {
        SelectedItem = SelectedItem ?? Items.First();
        return Task.CompletedTask;
    }

}