@using BlazorApp18.Classes
@typeparam TEntity where TEntity : ISelecatble

<div >


    <div class="fixed left-0 right-0 bottom-0 top-0  bg-black/50 z-10 @(DropDownActive ? "" : "hidden")" @onclick="SelectClicked">

        @if (DropDownActive)
        {
            <div class=" z-50  h-screen flex flex-col  items-center justify-center ">

                <div class="bg-white flex flex-col gap-1 w-72 items-center justify-center p-2  rounded-2xl">
                    @foreach (ISelecatble item in Items)
                    {
                        <div class="p-2 bg-white cursor-pointer flex gap-4 w-full hover:bg-blue-500 rounded-2xl duration-500 justify-between items-center" @onclick="() => ItemSelected(item)">
                            <img src="@item.ImageUrl" alt="car" class="w-10 h-10"/>
                            <div class="">@item.Text</div>
                            <div class="w-1"></div>
                        </div>
                    }
                </div>

            </div>
        }
    </div>


    <div @onchange="SelectChange">
        <div class="componentBorderStyle flex justify-center py-2 px-4 group cursor-pointer" @onclick="SelectClicked">
            <div class="flex justify-between items-center w-full">

                <img src="@SelectedItem?.ImageUrl" alt="car" class="iconDropdown"/>
                <div class="">@SelectedItem?.Text</div>
                <div class="cursor-pointer  flex flex-col  items-center justify-center gap-1 ">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-4 h-4  duration-200 group-hover:text-yellow-400/50 translate-y-1 text-componentColorDarkest">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 15.75l7.5-7.5 7.5 7.5"/>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-4 h-4  duration-200 group-hover:text-yellow-400/50   -translate-y-1 text-componentColorDarkest">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
                    </svg>
                </div>

            </div>
        </div>
    </div>
</div>

@code {


    private bool DropDownActive { get; set; } = false;

    private ISelecatble SelectedItem { get; set; } = null!;

    [Parameter]
    public IEnumerable<ISelecatble> Items { get; set; } = Array.Empty<ISelecatble>();

    [Parameter]
    public EventCallback<ISelecatble?> OnChanged { get; set; }

    private async Task SelectChange(ChangeEventArgs arg)
    {
        await OnChanged.InvokeAsync((ISelecatble) arg.Value!);
    }

    private void SelectClicked()
    {
        DropDownActive = !DropDownActive;
    }

    private void ItemSelected(ISelecatble item)
    {
        SelectedItem = item;
        StateHasChanged();
    }

    protected override Task OnInitializedAsync()
    {
        SelectedItem = Items.First();
        return Task.CompletedTask;
    }

}